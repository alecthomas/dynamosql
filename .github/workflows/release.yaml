on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release
jobs:
  macos:
    name: release -- darwin
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: Get latest release version number
        id: version
        uses: battila7/get-version-action@v2
      - name: Build
        run: cd cmd/dynamosql && go build -o ../../dynamosql .
      - name: Bundle
        run: tar -czf dynamosql-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz dynamosql
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dynamosql-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz
          asset_name: dynamosql-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz
          asset_content_type: application/gzip

  linux:
    name: release -- linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: Get latest release version number
        id: version
        uses: battila7/get-version-action@v2
      - name: Build
        run: cd cmd/dynamosql && go build -o ../../dynamosql .
      - name: Bundle
        run: tar -czf dynamosql-${{ steps.version.outputs.version }}-linux-amd64.tar.gz dynamosql
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dynamosql-${{ steps.version.outputs.version }}-linux-amd64.tar.gz
          asset_name: dynamosql-${{ steps.version.outputs.version }}-linux-amd64.tar.gz
          asset_content_type: application/gzip
