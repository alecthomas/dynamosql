[
  {
    "Query": "SELECT * FROM gamescores",
    "Error": "partition key must appear exactly once in the WHERE clause, in an equality condition, such as: WHERE UserId = :param"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE Wins = 3",
    "Error": "partition key must appear exactly once in the WHERE clause, in an equality condition, such as: WHERE UserId = :param"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId = \"101\" AND Wins = $1",
    "Error": "1:58: invalid token '$'"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId = :UserId OR Wins = 3",
    "Error": "1:49: unexpected token \"OR\""
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId = :UserId AND (Wins = 3 OR UserId = \"105\")",
    "Error": "partition key \"UserId\" may not appear in nested expression"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE NOT UserId = :UserId",
    "Error": "partition key must appear exactly once in the WHERE clause, in an equality condition, such as: WHERE UserId = :param"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId > :UserId",
    "Error": "partition key must appear exactly once in the WHERE clause, in an equality condition, such as: WHERE UserId = :param"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE begins_with(UserId, 5)",
    "Error": "partition key must appear exactly once in the WHERE clause, in an equality condition, such as: WHERE UserId = :param"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId = :UserId AND UserId = :UserId2",
    "Error": "partition key \"UserId\" can only appear once in WHERE clause"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId = :UserId AND GameTitle = \"A\" AND GameTitle = \"B\"",
    "Error": "sort key \"GameTitle\" can only appear once in WHERE clause"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId = :UserId AND attribute_exists(GameTitle)",
    "Error": "sort key \"GameTitle\" may not be used with function attribute_exists()"
  },
  {
    "Query": "SELECT * FROM gamescores WHERE UserId = :UserId AND Wins = ?",
    "Error": "cannot mix positional params (?) with named params (:param)"
  }
]
